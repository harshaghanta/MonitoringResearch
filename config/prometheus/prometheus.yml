# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "prometheus_custom_metric_rules.yml"
  - "prometheus_alert_rules.yml"
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    #modified prometheus config file

    static_configs:
      - targets: ["prometheus:9090"]
  - job_name: "monitoring-app1"
    static_configs:
      - targets: ["monitoringapp:12345"]
  - job_name: 'node-exporter'         
    ec2_sd_configs:
      - region: ap-south-1
        access_key: AKIATJFJMQDOXL5GLE4T
        secret_key: --------------------
        port: 9100
        refresh_interval: 1m
        filters:
          - name: tag:nodeIdentifier
            values:
              - 'ec2-nodeexporter'
    relabel_configs:
      - source_labels:
        - '__meta_ec2_tag_Name'
        target_label: 'instance'
      - source_labels:
        - '__meta_ec2_tag_customer'
        target_label:  'customer'
      - source_labels:
        - '__meta_ec2_tag_role'
        target_label:  'role'
      # This section will take care of replacing the private aws ip with public ip
      - source_labels: [__meta_ec2_public_ip]
        replacement: ${1}:9100
        target_label: __address__